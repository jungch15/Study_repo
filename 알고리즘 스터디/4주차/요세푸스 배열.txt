#include <iostream>
using namespace std;


class Node{
private:
	int data;
	Node* link;
public:
	Node(int n=0):data(n),link(NULL){}
	int getData(){return data;}
	void setData(int d){data =d;}
	Node* getLink(){return link;}
	void setLink(Node* l){link = l;}
	void display(){cout<<data<<endl;}
};

class LinkedList{
private:
	Node* head;
public:
	LinkedList():head(NULL){}
	void insert(Node* next){
		if(isEmpty()){
			head = next;
			next->setLink(next);
		}
		else{
			next->setLink(head->getLink());
			head->setLink(next);
		}
	}
	Node* remove(){
		if(isEmpty())
			return NULL;
		Node* delNode = head->getLink();
		if(delNode->getLink() == delNode)
			head = NULL;
		else
			head->setLink(delNode->getLink());
		return delNode;
	}
	void moveRight(int n){
		for(int i=0;i<n;i++)
			head = head->getLink();
	}
	bool isEmpty(){return head == NULL;}
	void display(){
		for(Node* i = head->getLink();i!=NULL;i=i->getLink())
			i->display();
	}

};



int main(){
	LinkedList list;
	int num, order;
	cin>>num>>order;
	for(int i=num;i>=1;i--)
		list.insert(new Node(i));

	while(!list.isEmpty()){
		list.moveRight(order-1);
		Node* a =list.remove();
		a->display();
	}
}
